#!/bin/perl -w
use Cwd;
use File::Basename;
use File::Find;
use File::Copy;


my $usage = "Usage: $0 tag dir\n";
my $tag =shift or die $usage;
my $topdir = shift  || ".";

chdir $topdir or die "$!\n";
`cvs export -r $tag vap util` or die "$!\n";

# Now the tree directly below $topdir looks just like the CVS tree,
# but we want to flatten it some


my @files;


  # ---------- The IDL files! ---------

my $r;
if (! -d "./idl") {
  my $exe="mv ./vap/idl .";
  $r=system($exe)/256;
  die "$!\n" unless $r==0;
}

print "Getting util/idl/*.pro";
@files = glob("util/idl/*.pro");
$newpath = "./idl";
foreach my $f (@files){
  ($name, $path) = fileparse($f);
  my $newname = "$newpath/$name";
  print "Copying $f to $newname\n";
  rename($f, $newname) or die "$!\n";
}


  # --------- Perl -------------

print "Getting Perl files from vap/perl\n";
mkdir "perl" or die "$!\n" unless (-d "perl") ;
@files = glob('vap/perl/*');
$newpath="./perl";
foreach my $f (@files){
  ($name, $path) = fileparse($f);
  my $newname = "$newpath/$name";
  print "cp $f $newname\n";
  rename($f, $newname) or die "$!\n";
  if ($newname =~ /\.pm$/){
    chmod 0640, $newname or die "$!\n";
  } else {
    chmod 0750, $newname or die "$!\n";
  }
}

print "Getting Perl files from util/perl\n";
@files = glob('util/perl/*');
foreach my $f (@files){
  ($name, $path) = fileparse($f);
  my $newname = "$newpath/$name";
  print "cp $f $newname\n";
  rename($f, $newname) or die "$!\n";
  if ($newname =~ /\.pm$/){
    chmod 0640, $newname or die "$!\n";
  } else {
    chmod 0750, $newname or die "$!\n";
  }
}


  # --------- Library ------------
print "mv ./Library .\n";
if (! -d "./Library") {
  my $exe="mv ./vap/Library .";
  #`mv ./vap/Library .` or die "$!\n";
  $r=system($exe)/256;
  die "$!\n" unless $r==0;
}

  # ---- config files -----------

print "mv ./config .\n";
if (! -d "./config") {
  my $exe="mv ./vap/config .";
  #`mv ./vap/Library .` or die "$!\n";
  $r=system($exe)/256;
  die "$!\n" unless $r==0;
}

  # --------- source ------------

mkdir "src" or die "$!\n" unless (-d "src") ;
print "moving files from vap/src to ./src\n";
@files=glob('vap/src/*');
$newpath="./src";
foreach my $f (@files){
  ($name, $path) = fileparse($f);
  my $newname = "$newpath/$name";
  print "cp $f $newname\n";
  rename($f, $newname) or die "$!\n";
}

print "moving files from util/src to ./src\n";
@files=glob('util/src/*');
foreach my $f (@files){
  ($name, $path) = fileparse($f);
  my $newname = "$newpath/$name";
  print "cp $f $newname\n";
  rename($f, $newname) or die "$!\n";
}

  # ---------- scripts -------------


mkdir "scr" or die "$!\n" unless (-d "scr") ;
print "moving files from vap/scr to ./scr\n";
@files=glob('vap/scr/*');
$newpath="./scr";
foreach my $f (@files){
  ($name, $path) = fileparse($f);
  my $newname = "$newpath/$name";
  rename($f, $newname) or die "$!\n";
  print "cp $f $newname\n";
  chmod 0750, $newname or die "$!\n";
}

@files=glob('util/scr/*');
print "moving files from util/src to ./src\n";
foreach my $f (@files){
  ($name, $path) = fileparse($f);
  my $newname = "$newpath/$name";
  print "cp $f $newname\n";
  rename($f, $newname) or die "$!\n";
  chmod 0750, $newname or die "$!\n";
}

#-------- the html directories -----------
print "mv ./vap/html .\n";
if (! -d "./html") {
  my $exe="mv ./vap/html .";
  $r=system($exe)/256;
  die "$!\n" unless $r==0;
}


#-------- the documents -----------
print "mv ./vap/Documents ./Documents.\n";
if (! -d "./Documents") {
  my $exe="mv ./vap/Documents .";
  $r=system($exe)/256;
  die "$!\n" unless $r==0;
}

print "Removing ./vap and ./util\n";
`rm -rf ./vap` and die "$!\n";
`rm -rf ./util` and die "$!\n";

print "------ Running make in src ---- \n";
chdir "./src" or die "$!\n"; 
$r=system("make")/256;
die "$!\n" if $r;
$r=system("make install")/256;
die "$!\n" if $r;
chdir ".." or die "$!\n";

print "------ Running make in idl/linkimage ---- \n";
chdir "idl/linkimage" or die "$!\n";
$r=system("make")/256;
die "$!\n" if $r;
$r=system("make install")/256;
die "$!\n" if $r;
chdir "../.." or die "$!\n";


print "\n\n==================================\n\n Read \n./Documents/README and \n./Documents/INSTALL \nto complete installation!\n\n========================================\n\n";

print "Done!\n";
exit;

sub findidl{
  push @files, $File::Find::name if /\.pro$/;
}
